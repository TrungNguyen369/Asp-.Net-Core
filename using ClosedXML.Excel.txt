using ClosedXML.Excel;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.StaticFiles;
using NetCore6_0_ExcelDemo.Models;

namespace NetCore6_0_ExcelDemo.Controllers
{
    //[Route("api/[controller]")]
    [ApiController]
    public class DemoController : ControllerBase
    {
        [HttpGet]
        [Route("GenerateExcel")]
        public async Task<IActionResult> GenerateExcel()
        {
            var qcReports = GetQcReport();

            using (var workbook = new XLWorkbook())
            {
                var worksheet = workbook.Worksheets.Add("QC Report");
                worksheet.Cell(1, 1).Value = "WorkerId";
                worksheet.Cell(1, 2).Value = "MachineCode";
                worksheet.Cell(1, 3).Value = "StartTime";
                worksheet.Cell(1, 4).Value = "WorkTime";
                worksheet.Cell(1, 5).Value = "Note";
                worksheet.Cell(1, 6).Value = "TotalWorkTime";

                int currentRow = 2;

                string previousWorkerId = null;
                string previousTotalWorkTime = null;
                int workerIdStartRow = 2;
                int totalWorkTimeStartRow = 2;

                foreach (var report in qcReports)
                {
                    if (report.WorkerId != previousWorkerId)
                    {
                        if (currentRow > workerIdStartRow)
                        {
                            worksheet.Range($"A{workerIdStartRow}:A{currentRow - 1}").Merge(); 
                            worksheet.Range($"F{totalWorkTimeStartRow}:F{currentRow - 1}").Merge();
                        }
                        worksheet.Cell(currentRow, 1).Value = report.WorkerId;
                        previousWorkerId = report.WorkerId;
                        workerIdStartRow = currentRow;

                        worksheet.Cell(currentRow, 6).Value = report.TotalWorkTime;
                        previousTotalWorkTime = report.TotalWorkTime;
                        totalWorkTimeStartRow = currentRow;
                    }

                    //if (report.TotalWorkTime != previousTotalWorkTime)
                    //{
                    //    if (currentRow > totalWorkTimeStartRow)
                    //    {
                    //        worksheet.Range($"F{totalWorkTimeStartRow}:F{currentRow - 1}").Merge();
                    //    }
                    //    worksheet.Cell(currentRow, 6).Value = report.TotalWorkTime;
                    //    previousTotalWorkTime = report.TotalWorkTime;
                    //    totalWorkTimeStartRow = currentRow;
                    //}

                    worksheet.Cell(currentRow, 2).Value = report.MachineCode;
                    worksheet.Cell(currentRow, 3).Value = report.StartTime;
                    worksheet.Cell(currentRow, 4).Value = report.WorkTime;
                    worksheet.Cell(currentRow, 5).Value = report.Note;

                    currentRow++;
                }

                // Merge the last set of rows
                if (currentRow > workerIdStartRow)
                {
                    worksheet.Range($"A{workerIdStartRow}:A{currentRow - 1}").Merge();
                }
                if (currentRow > totalWorkTimeStartRow)
                {
                    worksheet.Range($"F{totalWorkTimeStartRow}:F{currentRow - 1}").Merge();
                }

                // Auto-fit columns to content
                worksheet.Columns().AdjustToContents();

                using (var stream = new System.IO.MemoryStream())
                {
                    workbook.SaveAs(stream);
                    var content = stream.ToArray();
                    return File(content, "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "QcReport.xlsx");
                }
            }
        }

        public static List<QcReport> GetQcReport()
        {

            var qcReports = new List<QcReport>
            {
            new QcReport { WorkerId = "1443", MachineCode = "QC0006", StartTime = "6:30", WorkTime = "125 phút", Note = "", TotalWorkTime = "" },
            new QcReport { WorkerId = "1443", MachineCode = "QC0005", StartTime = "6:48", WorkTime = "18 phút", Note = "", TotalWorkTime = "" },
            new QcReport { WorkerId = "1443", MachineCode = "QC0004", StartTime = "7:05", WorkTime = "0 phút", Note = "", TotalWorkTime = "2,157 phút" },
            new QcReport { WorkerId = "1443", MachineCode = "QC0005", StartTime = "7:07", WorkTime = "0 phút", Note = "", TotalWorkTime = "" },
            new QcReport { WorkerId = "1474", MachineCode = "QC0008", StartTime = "7:08", WorkTime = "108 phút", Note = "", TotalWorkTime = "" },
            new QcReport { WorkerId = "1474", MachineCode = "QC0006", StartTime = "8:35", WorkTime = "0 phút", Note = "", TotalWorkTime = "" },
            new QcReport { WorkerId = "209", MachineCode = "QC0003", StartTime = "8:38", WorkTime = "0 phút", Note = "", TotalWorkTime = "" },
            new QcReport { WorkerId = "209", MachineCode = "QC0008", StartTime = "7:08", WorkTime = "108 phút", Note = "", TotalWorkTime = "" },
            new QcReport { WorkerId = "209", MachineCode = "QC0006", StartTime = "8:35", WorkTime = "0 phút", Note = "", TotalWorkTime = "" },
            new QcReport { WorkerId = "209", MachineCode = "QC0003", StartTime = "8:38", WorkTime = "0 phút", Note = "", TotalWorkTime = "" },
            new QcReport { WorkerId = "1414", MachineCode = "QC0005", StartTime = "6:48", WorkTime = "18 phút", Note = "", TotalWorkTime = "" },
            new QcReport { WorkerId = "1443", MachineCode = "QC0004", StartTime = "7:05", WorkTime = "0 phút", Note = "", TotalWorkTime = "123" },
            new QcReport { WorkerId = "1443", MachineCode = "QC0005", StartTime = "7:07", WorkTime = "0 phút", Note = "", TotalWorkTime = "" },
            new QcReport { WorkerId = "1474", MachineCode = "QC0006", StartTime = "8:35", WorkTime = "0 phút", Note = "", TotalWorkTime = "" },
            new QcReport { WorkerId = "1474", MachineCode = "QC0003", StartTime = "8:38", WorkTime = "0 phút", Note = "", TotalWorkTime = "" },
            new QcReport { WorkerId = "1474", MachineCode = "QC0005", StartTime = "6:48", WorkTime = "18 phút", Note = "", TotalWorkTime = "" },
            new QcReport { WorkerId = "1474", MachineCode = "QC0004", StartTime = "7:05", WorkTime = "0 phút", Note = "", TotalWorkTime = "123" },
            new QcReport { WorkerId = "308", MachineCode = "QC0005", StartTime = "7:07", WorkTime = "0 phút", Note = "", TotalWorkTime = "" },
            new QcReport { WorkerId = "308", MachineCode = "QC0008", StartTime = "7:08", WorkTime = "108 phút", Note = "", TotalWorkTime = "12" }
            };

            return qcReports;
        }
    }
}
